apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rendertron-ingress
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /
  #   ingress.kubernetes.io/whitelist-source-range: "1.1.1.1/24"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:  
  rules:
  - host: whitelist.test.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          # serviceName: rendertron-svc
          # servicePort: 80
          service:
            name: rendertron-svc
            port:
              number: 80        


# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: fanout-ingress
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /v1/*
#         backend:
#           serviceName: web
#           servicePort: 8080
#       - path: /v2/*
#         backend:
#           serviceName: web2
#           servicePort: 8080

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: rendertron-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     #ingressClassName: nginx
#     #ingress.kubernetes.io/whitelist-source-range: 49.36.X.X/32
#     #nginx.ingress.kubernetes.io/whitelist-source-range: 18.0.0.0/8, 56.0.0.0/8
#     #ingress.kubernetes.io/whitelist-source-range: 192.168.X.X/32
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: rendertron-svc
#             port:
#               number: 80
